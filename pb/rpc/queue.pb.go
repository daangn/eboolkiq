// Copyright 2020 Danggeun Market Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: rpc/queue.proto

package rpc

import (
	pb "github.com/daangn/eboolkiq/pb"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// ListReq 는 List 를 요청하기 위한 메시지이다.
type ListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListReq) Reset() {
	*x = ListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_queue_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReq) ProtoMessage() {}

func (x *ListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_queue_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReq.ProtoReflect.Descriptor instead.
func (*ListReq) Descriptor() ([]byte, []int) {
	return file_rpc_queue_proto_rawDescGZIP(), []int{0}
}

// ListResp 는 List 의 응답 메시지이다.
type ListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueList []*pb.Queue `protobuf:"bytes,1,rep,name=queue_list,json=queueList,proto3" json:"queue_list,omitempty"`
}

func (x *ListResp) Reset() {
	*x = ListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_queue_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResp) ProtoMessage() {}

func (x *ListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_queue_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResp.ProtoReflect.Descriptor instead.
func (*ListResp) Descriptor() ([]byte, []int) {
	return file_rpc_queue_proto_rawDescGZIP(), []int{1}
}

func (x *ListResp) GetQueueList() []*pb.Queue {
	if x != nil {
		return x.QueueList
	}
	return nil
}

// GetReq 는 Get 의 요청 메시지이다.
type GetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name 은 찾고자 하는 큐의 고유 이름이다.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetReq) Reset() {
	*x = GetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_queue_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReq) ProtoMessage() {}

func (x *GetReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_queue_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReq.ProtoReflect.Descriptor instead.
func (*GetReq) Descriptor() ([]byte, []int) {
	return file_rpc_queue_proto_rawDescGZIP(), []int{2}
}

func (x *GetReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GetResp 는 Get 의 응답 메시지이다.
type GetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue *pb.Queue `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
}

func (x *GetResp) Reset() {
	*x = GetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_queue_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResp) ProtoMessage() {}

func (x *GetResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_queue_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResp.ProtoReflect.Descriptor instead.
func (*GetResp) Descriptor() ([]byte, []int) {
	return file_rpc_queue_proto_rawDescGZIP(), []int{3}
}

func (x *GetResp) GetQueue() *pb.Queue {
	if x != nil {
		return x.Queue
	}
	return nil
}

type CreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// queue 는 생성하고자 하는 큐 이다.
	Queue *pb.Queue `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
}

func (x *CreateReq) Reset() {
	*x = CreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_queue_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReq) ProtoMessage() {}

func (x *CreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_queue_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReq.ProtoReflect.Descriptor instead.
func (*CreateReq) Descriptor() ([]byte, []int) {
	return file_rpc_queue_proto_rawDescGZIP(), []int{4}
}

func (x *CreateReq) GetQueue() *pb.Queue {
	if x != nil {
		return x.Queue
	}
	return nil
}

// CreateResp 는 Create 의 응답 메시지이다.
type CreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// queue 는 생성된 큐 이다.
	Queue *pb.Queue `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
}

func (x *CreateResp) Reset() {
	*x = CreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_queue_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResp) ProtoMessage() {}

func (x *CreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_queue_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResp.ProtoReflect.Descriptor instead.
func (*CreateResp) Descriptor() ([]byte, []int) {
	return file_rpc_queue_proto_rawDescGZIP(), []int{5}
}

func (x *CreateResp) GetQueue() *pb.Queue {
	if x != nil {
		return x.Queue
	}
	return nil
}

// DeleteReq 는 Delete 를 요청하기 위한 메시지 이다.
type DeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name 은 Delete 하고자 하는 큐의 고유 이름이다.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteReq) Reset() {
	*x = DeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_queue_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReq) ProtoMessage() {}

func (x *DeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_queue_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReq.ProtoReflect.Descriptor instead.
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return file_rpc_queue_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// DeleteResp 는 Delete 의 응답 메시지이다.
type DeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteResp) Reset() {
	*x = DeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_queue_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResp) ProtoMessage() {}

func (x *DeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_queue_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResp.ProtoReflect.Descriptor instead.
func (*DeleteResp) Descriptor() ([]byte, []int) {
	return file_rpc_queue_proto_rawDescGZIP(), []int{7}
}

// UpdateReq 는 Update 를 요청하기 위한 메시지이다.
type UpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// queue 는 업데이트를 하기 위한 정보이다. 특정 필드 하나에 대해서 Update 가 아닌,
	// 전체 필드에 대해서 Update 되므로 주의.
	Queue *pb.Queue `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
}

func (x *UpdateReq) Reset() {
	*x = UpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_queue_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReq) ProtoMessage() {}

func (x *UpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_queue_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReq.ProtoReflect.Descriptor instead.
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return file_rpc_queue_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateReq) GetQueue() *pb.Queue {
	if x != nil {
		return x.Queue
	}
	return nil
}

// UpdateResp 는 Update 의 응답 메시지이다.
type UpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// queue 는 Update 된 큐 이다.
	Queue *pb.Queue `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
}

func (x *UpdateResp) Reset() {
	*x = UpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_queue_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResp) ProtoMessage() {}

func (x *UpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_queue_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResp.ProtoReflect.Descriptor instead.
func (*UpdateResp) Descriptor() ([]byte, []int) {
	return file_rpc_queue_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateResp) GetQueue() *pb.Queue {
	if x != nil {
		return x.Queue
	}
	return nil
}

// FlushReq 는 Flush 를 요청하기 위한 메시지이다.
type FlushReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name 은 Flush 하고자 하는 큐의 이름이다.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FlushReq) Reset() {
	*x = FlushReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_queue_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushReq) ProtoMessage() {}

func (x *FlushReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_queue_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushReq.ProtoReflect.Descriptor instead.
func (*FlushReq) Descriptor() ([]byte, []int) {
	return file_rpc_queue_proto_rawDescGZIP(), []int{10}
}

func (x *FlushReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// FlushResp 는 Flush 의 응답 메시지이다.
type FlushResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FlushResp) Reset() {
	*x = FlushResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_queue_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushResp) ProtoMessage() {}

func (x *FlushResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_queue_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushResp.ProtoReflect.Descriptor instead.
func (*FlushResp) Descriptor() ([]byte, []int) {
	return file_rpc_queue_proto_rawDescGZIP(), []int{11}
}

// CountJobReq 는 CountJob 을 요청하기 위한 메시지이다.
type CountJobReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name 는 Job 의 개수를 Count 하기 위한 큐의 이름이다.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CountJobReq) Reset() {
	*x = CountJobReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_queue_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountJobReq) ProtoMessage() {}

func (x *CountJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_queue_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountJobReq.ProtoReflect.Descriptor instead.
func (*CountJobReq) Descriptor() ([]byte, []int) {
	return file_rpc_queue_proto_rawDescGZIP(), []int{12}
}

func (x *CountJobReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// CountJobResp 는 CountJob 의 응답 메시지이다.
type CountJobResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// job_count 는 큐에 존재하는 Job 의 개수이다.
	JobCount uint64 `protobuf:"varint,1,opt,name=job_count,json=jobCount,proto3" json:"job_count,omitempty"`
}

func (x *CountJobResp) Reset() {
	*x = CountJobResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_queue_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountJobResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountJobResp) ProtoMessage() {}

func (x *CountJobResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_queue_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountJobResp.ProtoReflect.Descriptor instead.
func (*CountJobResp) Descriptor() ([]byte, []int) {
	return file_rpc_queue_proto_rawDescGZIP(), []int{13}
}

func (x *CountJobResp) GetJobCount() uint64 {
	if x != nil {
		return x.JobCount
	}
	return 0
}

var File_rpc_queue_proto protoreflect.FileDescriptor

var file_rpc_queue_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x72, 0x70, 0x63, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x72, 0x70, 0x63, 0x1a,
	0x0b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x09, 0x0a, 0x07,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x3a, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b,
	0x69, 0x71, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x1c, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x30, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x62,
	0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x22, 0x33, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x09,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x0c, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x32, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b,
	0x69, 0x71, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x22,
	0x33, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65,
	0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x22, 0x1e, 0x0a, 0x08, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x0b, 0x0a, 0x09, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x21, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x32, 0xa6, 0x03, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x65, 0x62, 0x6f,
	0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x32, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x65, 0x62, 0x6f, 0x6f,
	0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x17, 0x2e, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x65, 0x62, 0x6f, 0x6f,
	0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e,
	0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69,
	0x71, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3b, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x65, 0x62, 0x6f,
	0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a,
	0x05, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x12, 0x16, 0x2e, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69,
	0x71, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x6c,
	0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x4a, 0x6f, 0x62, 0x12, 0x19, 0x2e, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x42, 0x43, 0x0a, 0x10, 0x63, 0x6f,
	0x6d, 0x2e, 0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2e, 0x72, 0x70, 0x63, 0x42, 0x0a,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x61, 0x6e, 0x67, 0x6e, 0x2f,
	0x65, 0x62, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x71, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_queue_proto_rawDescOnce sync.Once
	file_rpc_queue_proto_rawDescData = file_rpc_queue_proto_rawDesc
)

func file_rpc_queue_proto_rawDescGZIP() []byte {
	file_rpc_queue_proto_rawDescOnce.Do(func() {
		file_rpc_queue_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_queue_proto_rawDescData)
	})
	return file_rpc_queue_proto_rawDescData
}

var file_rpc_queue_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_rpc_queue_proto_goTypes = []interface{}{
	(*ListReq)(nil),      // 0: eboolkiq.rpc.ListReq
	(*ListResp)(nil),     // 1: eboolkiq.rpc.ListResp
	(*GetReq)(nil),       // 2: eboolkiq.rpc.GetReq
	(*GetResp)(nil),      // 3: eboolkiq.rpc.GetResp
	(*CreateReq)(nil),    // 4: eboolkiq.rpc.CreateReq
	(*CreateResp)(nil),   // 5: eboolkiq.rpc.CreateResp
	(*DeleteReq)(nil),    // 6: eboolkiq.rpc.DeleteReq
	(*DeleteResp)(nil),   // 7: eboolkiq.rpc.DeleteResp
	(*UpdateReq)(nil),    // 8: eboolkiq.rpc.UpdateReq
	(*UpdateResp)(nil),   // 9: eboolkiq.rpc.UpdateResp
	(*FlushReq)(nil),     // 10: eboolkiq.rpc.FlushReq
	(*FlushResp)(nil),    // 11: eboolkiq.rpc.FlushResp
	(*CountJobReq)(nil),  // 12: eboolkiq.rpc.CountJobReq
	(*CountJobResp)(nil), // 13: eboolkiq.rpc.CountJobResp
	(*pb.Queue)(nil),     // 14: eboolkiq.Queue
}
var file_rpc_queue_proto_depIdxs = []int32{
	14, // 0: eboolkiq.rpc.ListResp.queue_list:type_name -> eboolkiq.Queue
	14, // 1: eboolkiq.rpc.GetResp.queue:type_name -> eboolkiq.Queue
	14, // 2: eboolkiq.rpc.CreateReq.queue:type_name -> eboolkiq.Queue
	14, // 3: eboolkiq.rpc.CreateResp.queue:type_name -> eboolkiq.Queue
	14, // 4: eboolkiq.rpc.UpdateReq.queue:type_name -> eboolkiq.Queue
	14, // 5: eboolkiq.rpc.UpdateResp.queue:type_name -> eboolkiq.Queue
	0,  // 6: eboolkiq.rpc.Queue.List:input_type -> eboolkiq.rpc.ListReq
	2,  // 7: eboolkiq.rpc.Queue.Get:input_type -> eboolkiq.rpc.GetReq
	4,  // 8: eboolkiq.rpc.Queue.Create:input_type -> eboolkiq.rpc.CreateReq
	6,  // 9: eboolkiq.rpc.Queue.Delete:input_type -> eboolkiq.rpc.DeleteReq
	8,  // 10: eboolkiq.rpc.Queue.Update:input_type -> eboolkiq.rpc.UpdateReq
	10, // 11: eboolkiq.rpc.Queue.Flush:input_type -> eboolkiq.rpc.FlushReq
	12, // 12: eboolkiq.rpc.Queue.CountJob:input_type -> eboolkiq.rpc.CountJobReq
	1,  // 13: eboolkiq.rpc.Queue.List:output_type -> eboolkiq.rpc.ListResp
	3,  // 14: eboolkiq.rpc.Queue.Get:output_type -> eboolkiq.rpc.GetResp
	5,  // 15: eboolkiq.rpc.Queue.Create:output_type -> eboolkiq.rpc.CreateResp
	7,  // 16: eboolkiq.rpc.Queue.Delete:output_type -> eboolkiq.rpc.DeleteResp
	9,  // 17: eboolkiq.rpc.Queue.Update:output_type -> eboolkiq.rpc.UpdateResp
	11, // 18: eboolkiq.rpc.Queue.Flush:output_type -> eboolkiq.rpc.FlushResp
	13, // 19: eboolkiq.rpc.Queue.CountJob:output_type -> eboolkiq.rpc.CountJobResp
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_rpc_queue_proto_init() }
func file_rpc_queue_proto_init() {
	if File_rpc_queue_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_queue_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_queue_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_queue_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_queue_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_queue_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_queue_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_queue_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_queue_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_queue_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_queue_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_queue_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_queue_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_queue_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountJobReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_queue_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountJobResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_queue_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_queue_proto_goTypes,
		DependencyIndexes: file_rpc_queue_proto_depIdxs,
		MessageInfos:      file_rpc_queue_proto_msgTypes,
	}.Build()
	File_rpc_queue_proto = out.File
	file_rpc_queue_proto_rawDesc = nil
	file_rpc_queue_proto_goTypes = nil
	file_rpc_queue_proto_depIdxs = nil
}
